
name: build-push

on:
  push:
    paths-ignore:
      - '*.md'
      - '**.md'
      - '.gitignore'
      - '.dockerignore'
  pull_request:
    paths-ignore:
      - '*.md'
      - '**.md'
      - '.gitignore'
      - '.dockerignore'
  release:
    types:
      - created

env:
  REGISTRY: ghcr.io
  DOCKER_HUB_OWNER: adstewart

jobs:
  docker_build:
    name: docker build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Check out code

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Log in to github Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up docker+QEMU (for emulation support)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Load version
        id: version
        shell: bash
        run: |
          source METADATA.env
          echo "version=$IMAGE_VERSION" >> "$GITHUB_OUTPUT"

      - name: test version
        run: |
          echo "${{ steps.version.outputs.version }}"

      - name: Generate image labels
        id: metadata
        shell: bash
        run: |
          # our python script output gets sent to labels.txt
          # the syntax for storing this content so its accessible in later steps uses shell-like
          # EOF syntax.
          # See <https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-output-parameter>
          # and <https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#example-of-a-multiline-string>
          python3 print_docker_metadata.py > labels.txt
          {
            echo 'labels<<EOF'
            cat labels.txt
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"


      - name: test image labels
        run: |
          printf '%q\n' "${{ steps.metadata.outputs.labels }}"


      - name: Build and push (multi-arch, with cache and labels)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          tags: |
            adstewart/pandoc:latest
            ghcr.io/arranstewart/docker-pandoc:latest
            adstewart/pandoc:${{ steps.version.outputs.version }}
            ghcr.io/arranstewart/docker-pandoc:${{ steps.version.outputs.version }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/arranstewart/docker-pandoc:buildcache
          cache-to: type=registry,ref=ghcr.io/arranstewart/docker-pandoc:buildcache,mode=max



      #- name: create release
      #  if: startsWith(github.ref, 'refs/tags/v')
      #  run: |
      #    set -x

      #    ref_name='${{github.ref_name}}'
      #    version="${ref_name:1}" # strip leading 'v'

      #    # download github-release tool
      #    github_rel_url="https://github.com/github-release/github-release/releases/download/v0.10.0/linux-amd64-github-release.bz2"
      #    curl -L "${github_rel_url}" | bunzip2 > github-release
      #    chmod a+rx ./github-release

      #    export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
      #    IFS='/' read repo_user repo_name  <<<$(echo "${{github.repository}}")

      #    ./github-release release \
      #        --user $repo_user \
      #        --repo $repo_name \
      #        --tag ${{github.ref_name}} \
      #        --name "Version $version" \
      #        --description "See the changelog for a detailed list of changes" \
      #        --draft

